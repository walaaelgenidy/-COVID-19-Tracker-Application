{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","lastUpdate","deaths","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","separator","duration","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchApi","console","log","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","LineChart","length","borderColor","fill","CountryPicker","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","fetchedData","this","image","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c3de9aa3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__14pWe\",\"card\":\"Cards_card__1ybHG\",\"infected\":\"Cards_infected__1wzaK\",\"recovered\":\"Cards_recovered__2LY-R\",\"deaths\":\"Cards_deaths__3Mzso\"};","import React from 'react'; \r\nimport {Card, CardContent , Typography , Grid} from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({data  : {confirmed , recovered ,lastUpdate , deaths}})=>{\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n   \r\n    return(\r\n     <div className={styles.container}>\r\n         <Grid  container spacing={3} justify = \"center\">\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.infected)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                      <Typography variant=\"h5\">\r\n                          <CountUp start={0} end={confirmed.value} separator=',' duration={2.5} />\r\n                      </Typography>\r\n                      <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                      <Typography variant=\"body2\">number of active cases of COVIDE-19</Typography>\r\n                 </CardContent>\r\n             </Grid>\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.recovered)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                      <Typography variant=\"h5\">\r\n                      <CountUp start={0} end={recovered.value} separator=',' duration={2.5} />\r\n                      </Typography>\r\n                      <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                      <Typography variant=\"body2\">number of active cases of COVIDE-19</Typography>\r\n                 </CardContent>\r\n             </Grid>\r\n             <Grid item component={Card} xs={12} md={3} className={cx(styles.card , styles.deaths)}>\r\n                 <CardContent>\r\n                     <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                      <Typography variant=\"h5\">\r\n                      <CountUp start={0} end={deaths.value} separator=',' duration={2.5} />\r\n                      </Typography>\r\n                      <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                      <Typography variant=\"body2\">number of active cases of COVIDE-19</Typography>\r\n                 </CardContent>\r\n             </Grid>\r\n         </Grid>\r\n     </div>\r\n    )\r\n     \r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\n const url = \"https://covid19.mathdro.id/api\";\r\n\r\n export const fetchData = async(country)=>{\r\n     let changableUrl = url;\r\n     if(country){\r\n         changableUrl=`${url}/countries/${country}`;\r\n     }\r\n    try{\r\n        const {data : {confirmed , recovered ,lastUpdate , deaths}}= await axios.get(changableUrl);\r\n       return { confirmed ,recovered, deaths,lastUpdate };\r\n      \r\n    }catch(error){\r\n        return error;\r\n    }\r\n\r\n}\r\n\r\nexport const fetchDailyData = async ()=>{\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n    \r\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n      } catch (error) {\r\n        return error;\r\n      }\r\n};\r\n\r\nexport const fetchCountries  =async()=>{\r\n\r\n    try{\r\n\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    }catch(error){\r\n        return error;\r\n    }\r\n}","import React , {useEffect , useState} from 'react'; \r\nimport {fetchDailyData} from '../../api';\r\nimport { Line , Bar } from 'react-chartjs-2';\r\n\r\n import styles from './Chart.module.css'\r\n\r\nconst Chart = ( {data : {confirmed , recovered  , deaths} , country})=>{\r\n    const [dailyData , setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchApi = async ()=>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        console.log(confirmed);\r\n         fetchApi();\r\n\r\n        }, []);\r\n\r\n    const barChart = (\r\n       confirmed ? (\r\n          <Bar\r\n            data={{\r\n              labels: ['Infected', 'Recovered', 'Deaths'],\r\n              datasets: [\r\n                {\r\n                  label: 'People',\r\n                  backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                  data: [confirmed.value, recovered.value, deaths.value],\r\n                },\r\n              ],\r\n            }}\r\n            options={{\r\n              legend: { display: false },\r\n              title: { display: true, text: `Current state in ${country}` },\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n\r\n    console.log(confirmed , deaths ,recovered);\r\n    const LineChart = (\r\n      dailyData.length\r\n      ? ( <Line \r\n        data={{\r\n            labels : dailyData.map(({date})=>date) ,\r\n            datasets : [{\r\n                data:dailyData.map(({confirmed})=>confirmed),\r\n                label:'Infacted',\r\n                borderColor: '#3333ff',\r\n                fill : true,\r\n            }, {\r\n                data:dailyData.map(({deaths})=>deaths),\r\n                label:'Deaths',\r\n                borderColor: 'red',\r\n               backgroundColor: 'rgb(255,0,0,0.5)',\r\n                fill : true,\r\n            }],\r\n        }}\r\n        />) : null\r\n\r\n    );\r\n\r\n    return(\r\n     <div className={styles.container}>\r\n         {country ? barChart : LineChart}\r\n         </div>\r\n    )\r\n     \r\n}\r\n\r\nexport default Chart;","import React ,{useEffect , useState} from 'react'; \r\nimport { NativeSelect , FormControl} from '@material-ui/core';\r\nimport {fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst CountryPicker = ({handleCountryChange})=>{\r\n    const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n\r\n     return(\r\n        <FormControl className={styles.formControl}>\r\n         <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n             <option value=\"global\">Global</option>\r\n     {countries.map((country , i)=> <option key={i} value={country}>{country}</option>)}\r\n         </NativeSelect>\r\n     </FormControl>\r\n    )\r\n     \r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport { Cards , Chart , CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport image from './images/image.png';\r\nclass App extends React.Component{\r\n    state={\r\n        data : {},\r\n        country :'',\r\n    }\r\n\r\n  async  componentDidMount () {\r\n        const fetchedData = await fetchData();\r\n          this.setState({data : fetchedData});\r\n    }\r\n    handleCountryChange = async (country) => {\r\n        const data = await fetchData(country);\r\n    \r\n        this.setState({ data, country: country });\r\n      }\r\n    \r\n      render() {\r\n        const { data, country } = this.state;\r\n    \r\n        return(\r\n            <div className={styles.container}>\r\n                 <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n              <Cards data={data}/>\r\n              <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n              <Chart data={data} country={country} /> \r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3q9YJ\",\"image\":\"App_image__3Bq32\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__26TYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2LQRo\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}